<?php	/**	 * Created by PhpStorm.	 * User: Лука	 * Date: 07.05.2019	 * Time: 21:54	 */	class DBConfig	{		var $db_host = "localhost";		var $db_name = "vh258879_WhatsAppBenedictBotDB";		var $db_user = "vh258879_root";		var $db_pass = "";		var $db_con = null;				public function __construct()		{			try			{				$this->db_con = new PDO("mysql:host={$this->db_host};dbname={$this->db_name}", $this->db_user, $this->db_pass);				$this->db_con->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);				$this->db_con->exec("set names utf8");			} catch			(PDOException $e)			{				echo $e->getMessage();			}		}				public function UserExist($phone)		{			$request = $this->db_con->prepare('select count(*) as Count from `Users` where `Phone` = :param1');			$request->execute(array(':param1' => $phone));			$result = $request->fetchAll(PDO::FETCH_OBJ);			$result = $result[0]->Count;			return $result > 0;		}				public function GetUser($phone)		{			$request = $this->db_con->prepare('select * from `Users` where `Phone` = :param1');			$request->execute(array(':param1' => $phone));			$result = $request->fetchAll(PDO::FETCH_OBJ);			$result = $result[0];			return $result;		}				public function GetCardNumber()		{			$request = $this->db_con->prepare('SELECT Max(CardNumber) as Maximum FROM `Users` WHERE 1');			$request->execute();			$result = $request->fetchAll(PDO::FETCH_OBJ);			$result = $result[0]->Maximum;			if ($result == 0)			{				return 213;			}			else			{				return $result + 1;			}		}				public function AddUser($phone)		{			$request = $this->db_con->prepare('INSERT INTO `Users`(`Phone`, `RegisterDate`, `Stage`,`CardNumber`,`PinCode`,`PersonalCode`) VALUES (:param1,:param2,:param3,:param4,:param5,:param6)');			$request->execute(array(':param1' => $phone, ":param2" => (new DateTime('now'))->format('Y-m-d H:i:s'), ":param3" => 1, ':param4' => $this->GetCardNumber(), ':param5' => $this->generatePIN(4),':param6'=>$this->generatePIN(4)));		}				public function AddTask($phone)		{			if(!$this->TaskExist($phone))			{				$request = $this->db_con->prepare('INSERT INTO `Tasks`(`Phone`, `CreateDate`) VALUES (:param1,:param2)');				$request->execute(array(':param1' => $phone, ":param2" => (new DateTime('now'))->format('Y-m-d H:i:s')));			}		}		public function AddReview($chatID,$type,$mark,$Text)		{			$request = $this->db_con->prepare('INSERT INTO `Reviews`(`Phone`,`Type`,`Mark`,`Text`, `CreateDate`) VALUES (:param1,:param2,:param3,:param4,:param5)');			$request->execute(array(':param1' => $chatID,			                        ':param2' => $type,			                        ':param3' => $mark,			                        ':param4' => $Text,			                        ":param5" => (new DateTime('now'))->format('Y-m-d H:i:s')));					}		public function TaskExist($phone)		{			$request = $this->db_con->prepare('select count(*) as Count from `Tasks` where `Phone` = :param1');			$request->execute(array(':param1' => $phone));			$result = $request->fetchAll(PDO::FETCH_OBJ);			$result = $result[0]->Count;			return $result > 0;		}		public function UpdateStage($phone, $stage)		{			$request = $this->db_con->prepare('UPDATE `Users` SET `Stage`=:param1 WHERE `Phone` = :param2');			$request->execute(array(':param1' => $stage, ':param2' => $phone));		}		public function UpdateImage($phone, $image)		{			$request = $this->db_con->prepare('UPDATE `Users` SET `ImageUrl`=:param1 WHERE `Phone` = :param2');			$request->execute(array(':param1' => $image, ':param2' => $phone));		}		public function UpdateOptions($phone, $options)		{			$request = $this->db_con->prepare('UPDATE `Users` SET `Options`=:param1 WHERE `Phone` = :param2');			$request->execute(array(':param1' => $options, ':param2' => $phone));		}		public function GetTasks()		{			$request = $this->db_con->prepare('select * from `Tasks`');			$request->execute();			return $request->fetchAll(PDO::FETCH_OBJ);		}		public function RemoveTasks($phone)		{			$request = $this->db_con->prepare('delete from `Tasks` where `Phone` = :param1');			$request->execute(array(':param1'=>$phone));		}		public function GetEmployees()		{			$request = $this->db_con->prepare('select * from `Employees`');			$request->execute();			return $request->fetchAll(PDO::FETCH_OBJ);		}		 function generatePIN($digits = 4)		{			$i = 0;			$pin = "";			while ($i < $digits)			{				$pin .= mt_rand(0, 9);				$i++;			}			return $pin;		}	}